package exam;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

class BusInfo {
    public static void routes() {
        System.out.println("\n[운행구간]");
        System.out.println("정문 -> 생활관: 정문 → 중문 → 보건대학 → 학생회관 → 예술대학 → 생활관");
        System.out.println("생활관 -> 정문: 생활관 → 예술대학 → 학생회관 → 보건대학 → 중문 → 정문");
    }
    public static void timetableMenu(Scanner scanner, Map<String, List<String>> timetable1, Map<String, List<String>> timetable2) {
        System.out.println("1. 정문 출발");
        System.out.println("2. 생활관 출발");
        System.out.print("어느 출발지의 시간표를 보시겠습니까? (1 또는 2를 입력하세요): ");
        int choice = scanner.nextInt();
        scanner.nextLine(); // 버퍼 비우기
        
        switch (choice) {
        case 1:
            timetable(scanner, timetable1, "정문");
            break;
        case 2:
            timetable(scanner, timetable2, "생활관");
            break;
        default:
            System.out.println("잘못된 입력입니다.\n");
    }
}

private static void timetable(Scanner scanner, Map<String, List<String>> timetable, String departure) {
        System.out.print("\n몇 시 시간표를 안내할까요? (8시~17시 숫자로만 입력하세요): ");
        String hour = scanner.nextLine() + "시"; // "시"를 추가하여 키 형식 맞추기
		
        if (timetable.containsKey(hour)) {
            System.out.println("[" + departure + "] " + hour + " 시간표: " + timetable.get(hour));
        } 
        else {
            System.out.println("해당 시간의 시간표가 없습니다.");
        }
    }


public class Businfo {
    public static void main(String[] args) {
        // 시간표 저장
        Map<String, List<String>> timetable1 = new HashMap<>();
        Map<String, List<String>> timetable2 = new HashMap<>();
        
        String time1 = "C:\\Users\\user\\Desktop\\time1.txt";
        String time2 = "C:\\Users\\user\\Desktop\\time2.txt";
        
        loadTimetable(time1, timetable1);
        loadTimetable(time2, timetable2);
        
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\n==== 학교 교내버스 알리미 ====");
            System.out.println("1. 운행구간");
            System.out.println("2. 셔틀버스 시간표");
            System.out.println("3. 공지사항");
            System.out.println("4. 결행 정보");
            System.out.println("0. 종료");
            System.out.print("번호를 입력하세요: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // 버퍼 비우기

            switch (choice) {
                case 1:
                    BusInfo.routes();
                    break;
                case 2:
                	BusInfo.timetableMenu(scanner, timetable1, timetable2);
                    break;
                case 3:
                   
                    break;
                case 4:
                    
                    break;
                case 0:
                    System.out.println("프로그램을 종료합니다.");
                    scanner.close();
                    return;
                default:
                    System.out.println("잘못된 입력입니다.\n");
            	}	
        	}
    	}
	}


public static void loadTimetable(String filename, Map<String, List<String>> timetable) {
    try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
        String line;
        String hour = null;

        while ((line = reader.readLine()) != null) {
            if (line.contains("\t")) { // 시간과 배차 구분
                String[] parts = line.split("\t");
                hour = parts[0];
                timetable.put(hour, new ArrayList<>()); //리스트 저장
                
                if (parts.length > 1) {
                    timetable.get(hour).add(parts[1]);
                }
            }
            else if (!line.isBlank() && hour != null) {
                timetable.get(hour).add(line.trim());
            }
        }
    } catch (IOException e) {
        System.out.println("파일을 읽는 중 오류가 발생했습니다: " + e.getMessage()); }
	
	}
}

 
